=begin

This is an example Rtfile with default settings that run out of the box.
Modify the DSL methods below to suit your repository layout.

Base directories and file patterns are used in combination to specify file sets.
The convention is to chain them together, separated by a slash:

    "<base_dir>/<file_pattern>"

Examples:

* import_folio_dir/at_files
* import_idml_dir/at_files
* staging_dir/all_files
* staging_dir/all_text_files

=end

# Base directories
# ----------------

# Provide a name and a base directory string for each file set.
# It is recommended to expand paths relative to the location of this Rtfile
# so that they work independently of the user's current working directory.
#
# Conventions:
#  * Append '_dir' to the name so that it can be resolved unambiguously.
#  * Base dirs do NOT include the trailing '/'.

base_dir :import_folio_xml_dir, File.expand_path("initial_folio_import/folio/", File.dirname(__FILE__))
base_dir :import_idml_dir, File.expand_path("initial_idml_import/idml/", File.dirname(__FILE__))
base_dir :content_dir, File.expand_path("content/", File.dirname(__FILE__))
base_dir :rtfile_dir, File.dirname(__FILE__)
base_dir :staging_dir, File.expand_path("staging/", File.dirname(__FILE__))

# File patterns
# -------------

# Provide a name and a file pattern string for each file pattern.
# These file patterns will be joined with base_dirs to get a Dir.glob pattern
# for matching the desired file set.
#
# Conventions:
#  * Append '_file' or 'files' to the name so that it can be resolved unambiguously.
#  * File patterns do NOT include the leading '/'.

file_pattern :all_files, '**/*'
file_pattern :at_files, '**/*.at'
file_pattern :docx_files, '**/*.docx'
file_pattern :icml_files, '**/*.icml'
file_pattern :idml_files, '**/*.idml'
file_pattern :json_files, '**/*.json'
file_pattern :pt_files, '**/*.md'
file_pattern :repositext_files, '**/*.{at,json,md,txt}'
file_pattern :txt_files, '**/*.txt'
file_pattern :validation_report_file, 'validation_report.txt'
file_pattern :xml_files, '**/*.xml'

# Kramdown Parsers
# ----------------

# Provide a name and a Parser's class name as string.

kramdown_parser :folio_xml, 'Kramdown::Parser::Folio'
kramdown_parser :idml,      'Kramdown::Parser::Idml'
kramdown_parser :kramdown,  'Kramdown::Parser::KramdownRepositext'

# Kramdown Converter Methods
# --------------------------

# Provide a name and a method name to be used for conversion.

kramdown_converter_method :to_at,         :to_kramdown
kramdown_converter_method :to_icml,       :to_icml
kramdown_converter_method :to_idml_story, :to_idml_story
kramdown_converter_method :to_plain_text, :to_plain_text
